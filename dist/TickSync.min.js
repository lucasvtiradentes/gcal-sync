class TickSync{#a=["Time","parse","Component","helpers","TimezoneService","Event","RecurExpansion"];#e=["email","githubUsername","icsTasksCalendars","gcalCompletedTasksCalendar","options"];#i=["getOnlyFutureEvents","defaultMaxRetries","addEventsToCalendar","modifyExistingEvents","removeEventsFromCalendar","emailSummary","addAttendees","defaultAllDayReminder","overrideVisibility","addTasks","addAlerts","addOrganizerToTitle","descriptionAsTitles","addCalToTitle"];#r=this.#t();#n=this.#s();constructor(a,e){this.#o(a),this.#c(e),this.ical=e,this.configs=a,this.startUpdateTime=this.configs.options.getOnlyFutureEvents?new this.ical.Time.fromJSDate(new Date):""}#c(a){this.#a.forEach((e=>{if(-1===Object.keys(a).findIndex((a=>a===e)))throw new Error(`missing ical key: [${e}]`)}))}#o(a){this.#e.forEach((e=>{if(-1===Object.keys(a).findIndex((a=>a===e)))throw new Error(`missing config key: [${e}]`)}));const e=a.options;this.#i.forEach((a=>{if(-1===Object.keys(e).findIndex((e=>e===a)))throw new Error(`missing option key: [${a}]`)}))}#d(a){let e=[];for(let i of a){let a=-1;for(let r=0;r<e.length;r++)if(e[r][0]==i[1]){a=r;break}a>-1?e[a][1].push([i[0],i[2]]):e.push([i[1],[[i[0],i[2]]]])}return e}#l(a){let e=[];for(let i of a){let a=i[0].replace("webcal://","https://"),r=i[1];this.#u((function(){let i=UrlFetchApp.fetch(a,{validateHttpsCertificates:!1,muteHttpExceptions:!0});if(200==i.getResponseCode()){let t=RegExp("(BEGIN:VCALENDAR.*?END:VCALENDAR)","s").exec(i.getContentText());return null==t?void console.log("[ERROR] Incorrect ics/ical URL: "+a):void e.push([t[0],r])}throw"Error: Encountered HTTP error "+i.getResponseCode()+" when accessing "+a}),this.configs.options.defaultMaxRetries)}return e}#u(a,e){const i=["service invoked too many times in a short time","rate limit exceeded","internal error"];for(var r=0;r<=e;){r++;try{return a()}catch(a){const t=a.message;if(t.indexOf("HTTP error")>-1)return console.log(t),null;if(t.indexOf("is not a function")>-1||!i.some((function(e){return a.toLowerCase().indexOf(e)>-1})))throw a;if(r>e)return console.log(`Error, giving up after trying ${e} times [${a}]`),null;console.log("Error, Retrying... ["+a+"]"),Utilities.sleep(100*Math.pow(2,r)),Math.round(100*Math.random())}}return null}#m(a){var e=Calendar.CalendarList.list({showHidden:!0,maxResults:250}).items.filter((function(e){return(e.summaryOverride||e.summary)==a&&("owner"==e.accessRole||"writer"==e.accessRole)}))[0];return null==e&&(console.log("Creating Calendar: "+a),(e=Calendar.newCalendar()).summary=a,e.description="Created by GAS",e.timeZone=Calendar.Settings.get("timezone").value,e=Calendar.Calendars.insert(e)),e}#A(a){let e=[];var i=[];for(var r of a){var t=r[0],n=r[1],s=this.ical.parse(t),o=new this.ical.Component(s);this.ical.helpers.updateTimezones(o);var c=o.getAllSubcomponents("vtimezone");for(var d of c)this.ical.TimezoneService.register(d);var l=o.getAllSubcomponents("vevent");null!=n&&l.forEach((function(a){a.addPropertyWithValue("color",n)}));var u=o.getFirstPropertyValue("x-wr-calname")||o.getFirstPropertyValue("name");null!=u&&l.forEach((function(a){a.addPropertyWithValue("parentCal",u)})),i=[].concat(l,i)}return this.configs.options.getOnlyFutureEvents&&(i=i.filter((function(a){try{return!!(a.hasProperty("recurrence-id")||a.hasProperty("rrule")||a.hasProperty("rdate")||a.hasProperty("exdate"))||new this.ical.Time.fromString(a.getFirstPropertyValue("dtend").toString(),a.getFirstProperty("dtend")).compare(this.startUpdateTime)>=0}catch(a){return!0}}))),(i=i.filter((function(a){try{return"cancelled"!=a.getFirstPropertyValue("status").toString().toLowerCase()}catch(a){return!0}}))).forEach((function(a){if(a.hasProperty("uid")||a.updatePropertyWithValue("uid",Utilities.computeDigest(Utilities.DigestAlgorithm.MD5,a.toString()).toString()),a.hasProperty("recurrence-id")){var i=new this.ical.Time.fromString(a.getFirstPropertyValue("recurrence-id").toString(),a.getFirstProperty("recurrence-id")).convertToZone(this.ical.TimezoneService.get("UTC")).toString();e.push(a.getFirstPropertyValue("uid").toString()+"_"+i)}else e.push(a.getFirstPropertyValue("uid").toString())})),[i,e]}#g(a,e,i){let r=[],t=[];var n=this.#p(a,e,i);if(!n)return[[],[]];var s=i.calendarEventsIds.indexOf(n.extendedProperties.private.id),o=s>-1;return a.hasProperty("recurrence-id")?(console.log("Saving event instance for later: "+n.recurringEventId),i.recurringEvents.push(n),[[],[]]):(o?this.configs.options.modifyExistingEvents&&(console.log("Updating existing event "+n.extendedProperties.private.id),null!==(n=this.#u((function(){return Calendar.Events.update(n,i.targetCalendarId,i.calendarEvents[s].id)}),this.configs.options.defaultMaxRetries))&&this.configs.options.emailSummary&&t.push([[n.summary,n.start.date||n.start.dateTime],i.targetCalendarName])):this.configs.options.addEventsToCalendar&&(console.log("Adding new event "+n.extendedProperties.private.id),null!==(n=this.#u((function(){return Calendar.Events.insert(n,i.targetCalendarId)}),this.configs.options.defaultMaxRetries))&&this.configs.options.emailSummary&&r.push([[n.summary,n.start.date||n.start.dateTime],i.targetCalendarName])),[r,t])}#p(a,e,i){a.removeProperty("dtstamp");var r=new this.ical.Event(a,{strictExceptions:!0});if(!this.configs.options.getOnlyFutureEvents||!this.#f(a,r,i)){var t=Utilities.computeDigest(Utilities.DigestAlgorithm.MD5,r.toString()).toString();if(!(i.calendarEventsMD5s.indexOf(t)>=0)){var n=this.#u((function(){return Calendar.newEvent()}),this.configs.options.defaultMaxRetries);if(r.startDate.isDate)0==r.startDate.compare(r.endDate)&&(r.endDate=r.endDate.adjust(1,0,0,0)),n={start:{date:r.startDate.toString()},end:{date:r.endDate.toString()}};else{var s=r.startDate.timezone;if(-1==this.#r.indexOf(s)){var o=s;s=s in this.#n?this.#n[s]:e,console.log("Converting ICS timezone "+o+" to Google Calendar (IANA) timezone "+s)}n={start:{dateTime:r.startDate.toString(),timeZone:s},end:{dateTime:r.endDate.toString(),timeZone:s}}}if(this.configs.options.addAttendees&&a.hasProperty("attendee"))for(var c of(n.attendees=[],r.attendees)){var d=this.#h(c.toICALString());if(null!=d){var l={email:d},u=this.#T(c.toICALString());null!=u&&(l.displayName=u);var m=this.#E(c.toICALString());null!=m&&(l.responseStatus=m),n.attendees.push(l)}}if(a.hasProperty("status")){var A=a.getFirstPropertyValue("status").toString().toLowerCase();["confirmed","tentative","cancelled"].indexOf(A)>-1&&(n.status=A)}if(a.hasProperty("url")&&"http"==a.getFirstPropertyValue("url").toString().substring(0,4)&&(n.source=this.#u((function(){return Calendar.newEventSource()}),this.configs.options.defaultMaxRetries),n.source.url=a.getFirstPropertyValue("url").toString(),n.source.title="link"),a.hasProperty("sequence"),this.configs.options.descriptionAsTitles&&a.hasProperty("description")?n.summary=r.description:a.hasProperty("summary")&&(n.summary=r.summary),this.configs.options.addOrganizerToTitle&&a.hasProperty("organizer")){var g=a.getFirstProperty("organizer").getParameter("cn").toString();null!=g&&(n.summary=g+": "+n.summary)}if(this.configs.options.addCalToTitle&&a.hasProperty("parentCal")){var p=a.getFirstPropertyValue("parentCal");n.summary="("+p+") "+n.summary}a.hasProperty("description")&&(n.description=r.description),a.hasProperty("location")&&(n.location=r.location);var f=["default","public","private","confidential"];if(f.includes(this.configs.options.overrideVisibility.toLowerCase()))n.visibility=this.configs.options.overrideVisibility.toLowerCase();else if(a.hasProperty("class")){var h=a.getFirstPropertyValue("class").toString().toLowerCase();f.includes(h)&&(n.visibility=h)}if(a.hasProperty("transp")){var T=a.getFirstPropertyValue("transp").toString().toLowerCase();["opaque","transparent"].indexOf(T)>-1&&(n.transparency=T)}switch(r.startDate.isDate?0<=this.configs.options.defaultAllDayReminder&&this.configs.options.defaultAllDayReminder<=40320?n.reminders={useDefault:!1,overrides:[{method:"popup",minutes:this.configs.options.defaultAllDayReminder}]}:n.reminders={useDefault:!1,overrides:[]}:n.reminders={useDefault:!0,overrides:[]},this.configs.options.addAlerts){case"yes":var E=a.getAllSubcomponents("valarm");if(E.length>0){var S=[];for(var v of E){var C=v.getFirstPropertyValue("trigger").toString();try{C=new this.ical.Time.fromString(C).subtractDateTz(r.startDate).toString()}catch(a){console.log(`error1: ${a.message}`)}if(S.length<5){var y=this.#S(C);0<=y&&y<=40320&&S.push({method:"popup",minutes:y})}}S.length>0&&(n.reminders={useDefault:!1,overrides:S})}break;case"no":n.reminders={useDefault:!1,overrides:[]};break;default:n.reminders={useDefault:!0,overrides:[]}}if(r.isRecurring()){var P,k=new Date,M=new Date(Utilities.formatDate(k,"Etc/GMT","HH:mm:ss MM/dd/yyyy"));P=new Date(Utilities.formatDate(k,e,"HH:mm:ss MM/dd/yyyy"))-M,n.recurrence=this.#v(a,P)}if(n.extendedProperties={private:{MD5:t,fromGAS:"true",id:r.uid}},a.hasProperty("recurrence-id")){var I=new this.ical.Time.fromString(a.getFirstPropertyValue("recurrence-id").toString(),a.getFirstProperty("recurrence-id"));n.recurringEventId=I.convertToZone(this.ical.TimezoneService.get("UTC")).toString(),n.extendedProperties.private["rec-id"]=n.extendedProperties.private.id+"_"+n.recurringEventId}return a.hasProperty("color")&&(n.colorId=a.getFirstPropertyValue("color").toString()),n}console.log("Skipping unchanged Event "+a.getFirstPropertyValue("uid").toString())}}#S(a){var e=0;"+"!=a[0]&&"-"!=a[0]||(a=a.substr(1)),a=a.substr(1);var i=RegExp("\\d+M","g").exec(a),r=RegExp("\\d+H","g").exec(a),t=RegExp("\\d+D","g").exec(a),n=RegExp("\\d+W","g").exec(a);return null!=n?e+=10080&parseInt(n[0].slice(0,-1)):(null!=i&&(e+=parseInt(i[0].slice(0,-1))),null!=r&&(e+=60*parseInt(r[0].slice(0,-1))),null!=t&&(e+=24*parseInt(t[0].slice(0,-1))*60),e)}#E(a){var e=RegExp("(partstat=)([^;$:]*)","gi").exec(a);return null!=e&&e.length>1?(["NEEDS-ACTION"].indexOf(e[2].toUpperCase())>-1?e[2]="needsAction":["ACCEPTED","COMPLETED"].indexOf(e[2].toUpperCase())>-1?e[2]="accepted":["DECLINED"].indexOf(e[2].toUpperCase())>-1?e[2]="declined":["DELEGATED","IN-PROCESS","TENTATIVE"].indexOf(e[2].toUpperCase())?e[2]="tentative":e[2]=null,e[2]):null}#T(a){var e=RegExp("(cn=)([^;$:]*)","gi").exec(a);return null!=e&&e.length>1?e[2]:null}#h(a){var e=RegExp("(:mailto:)([^;$:]*)","gi").exec(a);return null!=e&&e.length>1?e[2]:null}#f(a,e,i){if(e.isRecurrenceException()){if(e.startDate.compare(this.startUpdateTime)<0&&e.recurrenceId.compare(this.startUpdateTime)<0)return console.log("Skipping past recurrence exception"),!0}else if(e.isRecurring()){var r=!1;if(e.endDate.compare(this.startUpdateTime)<0){for(var t,n,s=a.getFirstPropertyValue("dtstart"),o=new this.ical.RecurExpansion({component:a,dtstart:s}),c=0;t=o.next();){const a=t.subtractDate(e.startDate);var d=e.endDate.clone();if(d.addDuration(a),!(d.compare(this.startUpdateTime)<0)){n=t;break}c++}if(null!=n){n.timezone=e.startDate.timezone;const i=n.subtractDate(e.startDate);e.endDate.addDuration(i);var l=e.endDate;e.endDate=l,e.startDate=n;var u=a.getFirstProperty("rrule"),m=u.getFirstValue();m.isByCount()&&(m.count-=c,u.setValue(m)),a.getAllProperties("exdate").forEach((function(e){new this.ical.Time.fromString(e.getFirstValue().toString())<n&&a.removeProperty(e)})),a.getAllProperties("rdate").forEach((function(i){var r=i.getValues();0==(r=r.filter((function(a){var r=new this.ical.Time.fromString(a.toString(),i);return r.compare(this.startUpdateTime)>=0&&r.compare(e.startDate)>0}))).length?a.removeProperty(i):1==r.length?i.setValue(r[0]):r.length>1&&i.setValues(r)})),console.log("Adjusted RRule/RDate to exclude past instances")}else r=!0}for(let a=0;a<e.except.length;a++)e.except[a].startDate.compare(this.startUpdateTime)<0&&e.except[a].recurrenceId.compare(this.startUpdateTime)>=0?(console.log("Creating EXDATE for exception at "+e.except[a].recurrenceId.toString()),e.component.addPropertyWithValue("exdate",e.except[a].recurrenceId.toString())):e.except[a].startDate.compare(this.startUpdateTime)>=0&&e.except[a].recurrenceId.compare(this.startUpdateTime)<0&&(console.log("Creating RDATE for exception at "+e.except[a].recurrenceId.toString()),e.component.addPropertyWithValue("rdate",e.except[a].recurrenceId.toString()),r=!1);if(r)return i.icsEventsIds.splice(i.icsEventsIds.indexOf(a.getFirstPropertyValue("uid").toString()),1),console.log("Skipping past recurring event "+a.getFirstPropertyValue("uid").toString()),!0}else if(e.endDate.compare(this.startUpdateTime)<0)return i.icsEventsIds.splice(i.icsEventsIds.indexOf(a.getFirstPropertyValue("uid").toString()),1),console.log("Skipping previous event "+a.getFirstPropertyValue("uid").toString()),!0;return!1}#v(a,e){var i=a.getAllProperties("rrule"),r=a.getAllProperties("exrule"),t=a.getAllProperties("exdate"),n=a.getAllProperties("rdate"),s=[];for(var o of i){var c,d=o.toICALString(),l=RegExp("(.*)(UNTIL=)(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)T(\\d\\d)(\\d\\d)(\\d\\d)(;.*|\\b)","g").exec(d);null!=l&&(c=new Date(Date.UTC(parseInt(l[3],10),parseInt(l[4],10)-1,parseInt(l[5],10),parseInt(l[6],10),parseInt(l[7],10),parseInt(l[8],10))),c=Utilities.formatDate(new Date(c-e),"etc/GMT","YYYYMMdd'T'HHmmss'Z'"),d=l[1]+l[2]+c+l[9]),s.push(d)}for(var u of r)s.push(u.toICALString());for(var m of t)s.push(m.toICALString());for(var A of n)s.push(A.toICALString());return s}#C(a){let e=[];for(let i=0;i<a.calendarEvents.length;i++){let r=a.calendarEventsIds[i];-1==a.icsEventsIds.indexOf(r)&&null==a.calendarEvents[i].recurringEventId&&(console.log("Deleting old event "+r),this.#u((function(){Calendar.Events.remove(a.targetCalendarId,a.calendarEvents[i].id)}),this.configs.options.defaultMaxRetries),this.configs.options.emailSummary&&e.push([[a.calendarEvents[i].summary,a.calendarEvents[i].start.date||a.calendarEvents[i].start.dateTime],a.targetCalendarName]))}return e}#y(a){var e=Tasks.Tasklists.list().items[0],i=Tasks.Tasks.list(e.id).items||[],r=[];console.log("Fetched "+i.length+" existing tasks from "+e.title);for(var t=0;t<i.length;t++)r[t]=i[t].id;var n=[],s=[];for(var o of a){var c=this.ical.parse(o),d=new this.ical.Component(c);s=[].concat(d.getAllSubcomponents("vtodo"),s)}for(var l of(s.forEach((function(a){n.push(a.getFirstPropertyValue("uid").toString())})),console.log("\tProcessing "+s.length+" tasks"),s)){var u=Tasks.newTask();u.id=l.getFirstPropertyValue("uid").toString(),u.title=l.getFirstPropertyValue("summary").toString();var m=l.getFirstPropertyValue("due").toJSDate();u.due=m.getFullYear()+"-"+("0"+(m.getMonth()+1)).slice(-2)+"-"+("0"+m.getDate()).slice(-2)+"T"+("0"+m.getHours()).slice(-2)+":"+("0"+m.getMinutes()).slice(-2)+":"+("0"+m.getSeconds()).slice(-2)+"Z",Tasks.Tasks.insert(u,e.id)}if(console.log("\tDone processing tasks"),this.configs.options.removeEventsFromCalendar){console.log("Checking "+r.length+" tasks for removal");for(let a=0;a<r.length;a++){var A=i[a].id;-1==n.indexOf(A)&&(console.log("Deleting old task "+A),Tasks.Tasks.remove(e.id,A))}console.log("Done removing tasks")}}#P(a,e){console.log("ID: "+a.extendedProperties.private.id+" | Date: "+a.recurringEventId);var i=this.#u((function(){return Calendar.Events.list(e.targetCalendarId,{singleEvents:!0,privateExtendedProperty:"rec-id="+a.extendedProperties.private.id+"_"+a.recurringEventId}).items}),this.configs.options.defaultMaxRetries);null!=i&&0!=i.length||(10==a.recurringEventId.length?a.recurringEventId+="T00:00:00Z":"Z"!==a.recurringEventId.substr(-1)&&(a.recurringEventId+="Z"),i=this.#u((function(){return Calendar.Events.list(e.targetCalendarId,{singleEvents:!0,orderBy:"startTime",maxResults:1,timeMin:a.recurringEventId,privateExtendedProperty:"id="+a.extendedProperties.private.id}).items}),this.configs.options.defaultMaxRetries)),null!==i&&1==i.length?(console.log("Updating existing event instance"),this.#u((function(){Calendar.Events.update(a,e.targetCalendarId,i[0].id)}),this.configs.options.defaultMaxRetries)):(console.log("No Instance matched, adding as new event!"),this.#u((function(){Calendar.Events.insert(a,e.targetCalendarId)}),this.configs.options.defaultMaxRetries))}#k(a){let e={},i="";const r=`GAS-ICS-Sync Execution Summary: ${a.addedEvents.length} new, ${a.modifiedEvents.length} modified, ${a.removedEvents.length} deleted`;for(var t of(e.addedEvents=this.#d(a.addedEvents),e.modifiedEvents=this.#d(a.modifiedEvents),e.removedEvents=this.#d(a.removedEvents),i="GAS-ICS-Sync made the following changes to your calendar:<br/>",e.addedEvents)){i+=`<br/>${t[0]}: ${t[1].length} added events<br/><ul>`;for(const a of t[1]){const[e,r]=a[0];i+=`<li>${e} at ${r}</li>`}i+="</ul>"}for(const a of e.modifiedEvents){i+=`<br/>${a[0]}: ${a[1].length} modified events<br/><ul>`;for(const e of a[1]){const[a,r]=e[0];i+=`<li>${a} at ${r}</li>`}i+="</ul>"}for(const a of e.removedEvents){i+=`<br/>${a[0]}: ${a[1].length} removed events<br/><ul>`;for(const e of a[1]){const[a,r]=e[0];i+=`<li>${a} at ${r}</li>`}i+="</ul>"}i+="<br/>Do you have any problems or suggestions? Contact us at <a href='https://github.com/lucasvtiradentes/ticktick-gcal-sync'>github</a>.";var n={to:this.configs.email,subject:r,htmlBody:i,name:"GAS-ICS-Sync"};MailApp.sendEmail(n)}sync(){let a={addedEvents:[],modifiedEvents:[],removedEvents:[]};const e=this.#d(this.configs.icsTasksCalendars);for(let n of e){let e={calendarEvents:[],calendarEventsIds:[],icsEventsIds:[],calendarEventsMD5s:[],recurringEvents:[],targetCalendarName:n[0],targetCalendarId:""},s=[],o=n[1],c=this.#l(o);console.log("Syncing "+c.length+" calendars to "+e.targetCalendarName);let d=this.#m(e.targetCalendarName);if(e.targetCalendarId=d.id,console.log("Working on calendar: "+e.targetCalendarId),this.configs.options.addEventsToCalendar||this.configs.options.modifyExistingEvents||this.configs.options.removeEventsFromCalendar){var i=this.#u((function(){return Calendar.Events.list(e.targetCalendarId,{showDeleted:!1,privateExtendedProperty:"fromGAS=true",maxResults:2500})}),this.configs.options.defaultMaxRetries);for(e.calendarEvents=[].concat(e.calendarEvents,i.items);void 0!==i.nextPageToken;)null!=(i=this.#u((function(){return Calendar.Events.list(e.targetCalendarId,{showDeleted:!1,privateExtendedProperty:"fromGAS=true",maxResults:2500,pageToken:i.nextPageToken})}),this.configs.options.defaultMaxRetries))&&(e.calendarEvents=[].concat(e.calendarEvents,i.items));console.log("Fetched "+e.calendarEvents.length+" existing events from "+e.targetCalendarName);for(var r=0;r<e.calendarEvents.length;r++)null!=e.calendarEvents[r].extendedProperties&&(e.calendarEventsIds[r]=e.calendarEvents[r].extendedProperties.private["rec-id"]||e.calendarEvents[r].extendedProperties.private.id,e.calendarEventsMD5s[r]=e.calendarEvents[r].extendedProperties.private.MD5);const[a,t]=this.#A(c,e.icsEventsIds);s=a,e.icsEventsIds=t,console.log("Parsed "+s.length+" events from ical sources")}if(this.configs.options.addEventsToCalendar||this.configs.options.modifyExistingEvents){console.log("Processing "+s.length+" events");var t=this.#u((function(){return Calendar.Settings.get("timezone").value}),this.configs.options.defaultMaxRetries);s.forEach((i=>{const[r,n]=this.#g(i,t,e);a.addedEvents=a.addedEvents.concat(r),a.modifiedEvents=a.modifiedEvents.concat(n)})),console.log("Done processing events")}this.configs.options.removeEventsFromCalendar&&(console.log("Checking "+e.calendarEvents.length+" events for removal"),a.removedEvents=this.#C(e),console.log("Done checking events for removal")),this.configs.options.addTasks&&this.#y(c),console.log("Processing "+e.recurringEvents.length+" Recurrence Instances!");for(let a of e.recurringEvents)this.#P(a,e)}a.addedEvents.length+a.modifiedEvents.length+a.removedEvents.length>0&&this.configs.options.emailSummary&&this.#k(a),console.log("Sync finished!")}#t(){return["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port_of_Spain","America/Port-au-Prince","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/North","Australia/NSW","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","CET","Chile/Continental","Chile/EasterIsland","CST6CDT","Cuba","EET","Egypt","Eire","EST","EST5EDT","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT0","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/Greenwich","Etc/UCT","Etc/Universal","Etc/UTC","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Asia/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","GB","GB-Eire","GMT","GMT+0","GMT0","GMT−0","Hongkong","HST","Iceland","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Iran","Israel","Jamaica","Japan","Kwajalein","Libya","MET","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","MST","MST7MDT","Navajo","NZ","NZ-CHAT","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap","Poland","Portugal","PRC","PST8PDT","ROC","ROK","Singapore","Turkey","UCT","Universal","US/Alaska","US/Aleutian","US/Arizona","US/Central","US/Eastern","US/East-Indiana","US/Hawaii","US/Indiana-Starke","US/Michigan","US/Mountain","US/Pacific","US/Pacific-New","US/Samoa","UTC","WET","W-SU","Zulu"]}#s(){return{"Dateline Standard Time":"Etc/GMT+12","UTC-11":"Etc/GMT+11","Aleutian Standard Time":"America/Adak","Hawaiian Standard Time":"Pacific/Honolulu","Marquesas Standard Time":"Pacific/Marquesas","Alaskan Standard Time":"America/Anchorage","UTC-09":"Pacific/Gambier","Pacific Standard Time (Mexico)":"America/Tijuana","UTC-08":"Pacific/Pitcairn","Pacific Standard Time":"America/Los_Angeles","US Mountain Standard Time":"America/Phoenix","Mountain Standard Time (Mexico)":"America/Chihuahua","Mountain Standard Time":"America/Denver","Central America Standard Time":"America/Guatemala","Central Standard Time":"America/Chicago","Easter Island Standard Time":"Pacific/Easter","Central Standard Time (Mexico)":"America/Mexico_City","Canada Central Standard Time":"America/Regina","SA Pacific Standard Time":"America/Bogota","Eastern Standard Time (Mexico)":"America/Cancun","Eastern Standard Time":"America/New_York","Haiti Standard Time":"America/Port-au-Prince","Cuba Standard Time":"America/Havana","US Eastern Standard Time":"America/Indianapolis","Paraguay Standard Time":"America/Asuncion","Atlantic Standard Time":"America/Halifax","Venezuela Standard Time":"America/Caracas","Central Brazilian Standard Time":"America/Cuiaba","SA Western Standard Time":"America/La_Paz","Pacific SA Standard Time":"America/Santiago","Turks And Caicos Standard Time":"America/Grand_Turk","Newfoundland Standard Time":"America/St_Johns","Tocantins Standard Time":"America/Araguaina","E. South America Standard Time":"America/Sao_Paulo","SA Eastern Standard Time":"America/Cayenne","Argentina Standard Time":"America/Buenos_Aires","Greenland Standard Time":"America/Godthab","Montevideo Standard Time":"America/Montevideo","Magallanes Standard Time":"America/Punta_Arenas","Saint Pierre Standard Time":"America/Miquelon","Bahia Standard Time":"America/Bahia","UTC-02":"America/Noronha","Azores Standard Time":"Atlantic/Azores","Cape Verde Standard Time":"Atlantic/Cape_Verde",UTC:"Etc/GMT","GMT Standard Time":"Europe/London","Greenwich Standard Time":"Atlantic/Reykjavik","W. Europe Standard Time":"Europe/Berlin","Central Europe Standard Time":"Europe/Budapest","Romance Standard Time":"Europe/Paris","Morocco Standard Time":"Africa/Casablanca","Sao Tome Standard Time":"Africa/Sao_Tome","Central European Standard Time":"Europe/Warsaw","W. Central Africa Standard Time":"Africa/Lagos","Jordan Standard Time":"Asia/Amman","GTB Standard Time":"Europe/Bucharest","Middle East Standard Time":"Asia/Beirut","Egypt Standard Time":"Africa/Cairo","E. Europe Standard Time":"Europe/Chisinau","Syria Standard Time":"Asia/Damascus","West Bank Standard Time":"Asia/Hebron","South Africa Standard Time":"Africa/Johannesburg","FLE Standard Time":"Europe/Kiev","Israel Standard Time":"Asia/Jerusalem","Kaliningrad Standard Time":"Europe/Kaliningrad","Sudan Standard Time":"Africa/Khartoum","Libya Standard Time":"Africa/Tripoli","Namibia Standard Time":"Africa/Windhoek","Arabic Standard Time":"Asia/Baghdad","Turkey Standard Time":"Europe/Istanbul","Arab Standard Time":"Asia/Riyadh","Belarus Standard Time":"Europe/Minsk","Russian Standard Time":"Europe/Moscow","E. Africa Standard Time":"Africa/Nairobi","Iran Standard Time":"Asia/Tehran","Arabian Standard Time":"Asia/Dubai","Astrakhan Standard Time":"Europe/Astrakhan","Azerbaijan Standard Time":"Asia/Baku","Russia Time Zone 3":"Europe/Samara","Mauritius Standard Time":"Indian/Mauritius","Saratov Standard Time":"Europe/Saratov","Georgian Standard Time":"Asia/Tbilisi","Caucasus Standard Time":"Asia/Yerevan","Afghanistan Standard Time":"Asia/Kabul","West Asia Standard Time":"Asia/Tashkent","Ekaterinburg Standard Time":"Asia/Yekaterinburg","Pakistan Standard Time":"Asia/Karachi","India Standard Time":"Asia/Calcutta","Sri Lanka Standard Time":"Asia/Colombo","Nepal Standard Time":"Asia/Katmandu","Central Asia Standard Time":"Asia/Almaty","Bangladesh Standard Time":"Asia/Dhaka","Omsk Standard Time":"Asia/Omsk","Myanmar Standard Time":"Asia/Rangoon","SE Asia Standard Time":"Asia/Bangkok","Altai Standard Time":"Asia/Barnaul","W. Mongolia Standard Time":"Asia/Hovd","North Asia Standard Time":"Asia/Krasnoyarsk","N. Central Asia Standard Time":"Asia/Novosibirsk","Tomsk Standard Time":"Asia/Tomsk","China Standard Time":"Asia/Shanghai","North Asia East Standard Time":"Asia/Irkutsk","Singapore Standard Time":"Asia/Singapore","W. Australia Standard Time":"Australia/Perth","Taipei Standard Time":"Asia/Taipei","Ulaanbaatar Standard Time":"Asia/Ulaanbaatar","Aus Central W. Standard Time":"Australia/Eucla","Transbaikal Standard Time":"Asia/Chita","Tokyo Standard Time":"Asia/Tokyo","North Korea Standard Time":"Asia/Pyongyang","Korea Standard Time":"Asia/Seoul","Yakutsk Standard Time":"Asia/Yakutsk","Cen. Australia Standard Time":"Australia/Adelaide","AUS Central Standard Time":"Australia/Darwin","E. Australia Standard Time":"Australia/Brisbane","AUS Eastern Standard Time":"Australia/Sydney","West Pacific Standard Time":"Pacific/Port_Moresby","Tasmania Standard Time":"Australia/Hobart","Vladivostok Standard Time":"Asia/Vladivostok","Lord Howe Standard Time":"Australia/Lord_Howe","Bougainville Standard Time":"Pacific/Bougainville","Russia Time Zone 10":"Asia/Srednekolymsk","Magadan Standard Time":"Asia/Magadan","Norfolk Standard Time":"Pacific/Norfolk","Sakhalin Standard Time":"Asia/Sakhalin","Central Pacific Standard Time":"Pacific/Guadalcanal","Russia Time Zone 11":"Asia/Kamchatka","New Zealand Standard Time":"Pacific/Auckland","UTC+12":"Pacific/Wallis","Fiji Standard Time":"Pacific/Fiji","Chatham Islands Standard Time":"Pacific/Chatham","UTC+13":"Pacific/Enderbury","Tonga Standard Time":"Pacific/Tongatapu","Samoa Standard Time":"Pacific/Apia","Line Islands Standard Time":"Pacific/Kiritimati",Z:"Etc/GMT"}}}this.TickSync=TickSync;