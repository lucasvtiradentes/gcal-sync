!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).GcalSync=t()}(this,(function(){"use strict";function e(e,t,n,i){return new(n||(n=Promise))((function(o,s){function r(e){try{a(i.next(e))}catch(e){s(e)}}function c(e){try{a(i.throw(e))}catch(e){s(e)}}function a(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,c)}a((i=i.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const t="You provided an invalid github token",n="You provided an invalid github username";function i(e){const t=e.split("T");return{year:t[0].substring(0,4),month:t[0].substring(4,6),day:t[0].substring(6,8),hours:t[1]?t[1].substring(0,2):"00",minutes:t[1]?t[1].substring(2,4):"00",seconds:t[1]?t[1].substring(4,6):"00"}}const o=(t,n)=>e(void 0,void 0,void 0,(function*(){const e=t.replace("webcal://","https://"),o=yield fetch(e),r=yield o.text();if(-1===r.search("BEGIN:VCALENDAR"))throw new Error("RESPOSTA INVALIDA PRA UM ICS");const c=r.split("BEGIN:VEVENT\r\n").filter((e=>e.search("SUMMARY")>-1)),a=(r.search("SUMMARY:No task.")>0?[]:c.reduce(((e,t)=>{const n=t.split("BEGIN:VALARM\r\n");return[...e,{CALNAME:s(r,"X-WR-CALNAME:","\r\n"),DSTAMP:s(t,"DTSTAMP:","\r\n"),DTSTART:s(t,"DTSTART;","\r\n"),DTEND:s(t,"DTEND;","\r\n"),SUMMARY:s(t,"SUMMARY:","\r\n"),UID:s(t,"UID:","\r\n"),DESCRIPTION:s(t,"DESCRIPTION:","\r\n"),SEQUENCE:s(t,"SEQUENCE:","\r\n"),TZID:s(t,"TZID:","\r\n"),ALARM_TRIGGER:1===n.length?"":s(n[1],"TRIGGER:","\r\n"),ALARM_ACTION:1===n.length?"":s(n[1],"ACTION:","\r\n"),ALARM_DESCRIPTION:1===n.length?"":s(n[1],"DESCRIPTION:","\r\n")}]}),[])).map((e=>{const t=function(e,t,n,o){let s=e,r=t;if(s=s.slice(s.search(":")+1),r=r.slice(r.search(":")+1),""===r){const e=i(s),t=new Date(Date.UTC(Number(e.year),Number(e.month)-1,Number(e.day),0,0,0));t.setDate(t.getDate()+1),r={date:t.toISOString().split("T")[0]},s={date:`${e.year}-${e.month}-${e.day}`}}else{const e=i(s),t=i(r),c=(e=>0===e?"":`${e<0?"-":"+"}${String(Math.abs(e)).padStart(2,"0")}:00`)(o);s={dateTime:`${e.year}-${e.month}-${e.day}T${e.hours}:${e.minutes}:${e.seconds}${c}`,timeZone:n},r={dateTime:`${t.year}-${t.month}-${t.day}T${t.hours}:${t.minutes}:${t.seconds}${c}`,timeZone:n}}return{finalDtstart:s,finalDtend:r}}(e.DTSTART,e.DTEND,e.TZID,n);return{id:e.UID,name:e.SUMMARY,description:e.DESCRIPTION,tzid:e.TZID,start:t.finalDtstart,end:t.finalDtend}}));return a})),s=(e,t,n)=>{const i=e.slice(e.search(t)).replace(t,"");return i.slice(0,i.search(n))};const r="gcal-sync",c="2.0.0",a="ticktick_sync",u="github_sync";function l(e){return"object"==typeof e&&null!==e}const d={info:(e,...t)=>{console.log(e,...t)},error:(e,...t)=>{console.error(e,...t)}};function m(e,t){if(!l(e))return!1;for(const n in t){if(!(n in e))return d.error(`Missing key: ${n}`),!1;const i=typeof t[n],o=typeof e[n];if(l(t[n])){if(!l(e[n])||!m(e[n],t[n]))return d.error(`Invalid nested structure or type mismatch at key: ${n}`),!1}else if(i!==o)return d.error(`Type mismatch at key: ${n}. Expected ${i}, found ${o}`),!1}return!0}function f(e,t){return m(e,t)}const h={settings:{sync_function:"",timezone_correction:-3,update_frequency:4},options:{daily_summary_email_time:"15:00",email_daily_summary:!1,email_errors:!1,email_new_gcal_sync_release:!1,email_session:!1,maintenance_mode:!1,show_logs:!1}},p={ics_calendars:[]},g={username:"",commits_configs:{commits_calendar:"",ignored_repos:[],parse_commit_emojis:!1},issues_configs:{issues_calendar:""},personal_token:""};return class{constructor(e){if(this.configs=e,this.isGASEnvironment="undefined"!=typeof Calendar,!function(e){if(!l(e))return!1;const t={basic:!0,ticktick:!0,github:!0};return t.basic=f(e,h),a in e&&(t.ticktick=f(e[a],p)),u in e&&(t.github=f(e[u],g)),Object.values(t).every((e=>!0===e))}(e))throw new Error("schema invalid");this.today_date=function(e){const t=new Date;return t.setHours(t.getHours()+e),t}(this.configs.settings.timezone_correction).toISOString().split("T")[0],d.info(`${r} is running at version ${c}!`)}showConfigs(){console.log(this.configs)}sync(){return e(this,void 0,void 0,(function*(){const i=this.configs[u],s=this.configs[a],r=[...new Set([].concat(i?[this.configs[u].commits_configs.commits_calendar,this.configs[u].issues_configs.issues_calendar]:[]).concat(s?[...this.configs[a].ics_calendars.map((e=>e.gcal)),...this.configs[a].ics_calendars.map((e=>e.dcal_done))]:[]))];console.log(r);const c=this.configs[a].ics_calendars.map((e=>e.link)),l=(yield Promise.all(c.map((t=>e(this,void 0,void 0,(function*(){return yield o(t,this.configs.settings.timezone_correction)})))))).reduce(((e,t)=>e.concat(t)),[]);console.log(l);const d=yield function(i,o){var s;return e(this,void 0,void 0,(function*(){const e=[];let r=1,c=!1;for(;!1===c;){const a=`https://api.github.com/search/commits?q=author:${i}&page=${r}&sort=committer-date&per_page=100`;let u;u=""!==o?yield fetch(a,{headers:{Authorization:`Bearer ${o}`}}):yield fetch(a);const l=null!==(s=JSON.parse(yield u.text()))&&void 0!==s?s:{};if(200!==u.status){if("Validation Failed"===l.message)throw new Error(n);if("Bad credentials"===l.message)throw new Error(t);throw new Error(l.message)}const d=l.items;if(0===d.length){c=!0;break}if(e.push(...d),r++,r>10){c=!0;break}}return e.map((e=>({commitDate:e.commit.author.date,commitMessage:e.commit.message.split("\n")[0],commitId:e.html_url.split("commit/")[1],commitUrl:e.html_url,repository:e.repository.full_name,repositoryId:e.repository.id,repositoryName:e.repository.name,repositoryOwner:e.repository.owner.login,repositoryDescription:e.repository.description,isRepositoryPrivate:e.repository.private,isRepositoryFork:e.repository.fork})))}))}(this.configs[u].username,this.configs[u].personal_token);console.log(d)}))}}}));
