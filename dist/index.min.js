!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).GcalSync=t()}(this,(function(){"use strict";function e(e,t,n,i){return new(n||(n=Promise))((function(r,s){function o(e){try{c(i.next(e))}catch(e){s(e)}}function a(e){try{c(i.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,a)}c((i=i.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const t="You provided an invalid ICS calendar link: ",n="You provided an invalid github token",i="You provided an invalid github username";const r={DEBUG_MODE:!0,MAX_GCAL_TASKS:2500},s={info:(e,...t)=>{console.log(e,...t)},error:(e,...t)=>{console.error(e,...t)}};const o=e=>{let t=!1;var n;e.forEach((e=>{c(e)||(l(e),s.info(`created google calendar: [${e}]`),t=!0)})),t&&(n=2e3,new Promise((e=>setTimeout(e,n))))},a=()=>{var e;return null!==(e=Calendar.CalendarList.list({showHidden:!0}).items)&&void 0!==e?e:[]},c=e=>a().find((t=>t.summary===e)),l=e=>{const t=Calendar;if(t.CalendarList.list({showHidden:!0}).items.filter((e=>"owner"===e.accessRole)).map((e=>e.summary)).includes(e))throw new Error(`calendar ${e} already exists!`);const n=t.newCalendar();n.summary=e,n.timeZone=t.Settings.get("timezone").value;return t.Calendars.insert(n)};function d(e){return e.reduce(((e,t)=>{var n;const i=function(e){return Calendar.Events.list(e.id,{maxResults:r.MAX_GCAL_TASKS}).items.map((e=>function(e){var t,n,i,r,s;return{id:e.id,summary:e.summary,description:null!==(t=e.description)&&void 0!==t?t:"",htmlLink:e.htmlLink,attendees:null!==(n=e.attendees)&&void 0!==n?n:[],reminders:null!==(i=e.reminders)&&void 0!==i?i:{},visibility:null!==(r=e.visibility)&&void 0!==r?r:"default",start:e.start,end:e.end,created:e.created,updated:e.updated,colorId:e.colorId,extendedProperties:null!==(s=e.extendedProperties)&&void 0!==s?s:{}}}(e)))}((n=t,a().find((e=>e.summary===n))));return[...e,...i]}),[])}function u(e){const t=e.split("T");return{year:t[0].substring(0,4),month:t[0].substring(4,6),day:t[0].substring(6,8),hours:t[1]?t[1].substring(0,2):"00",minutes:t[1]?t[1].substring(2,4):"00",seconds:t[1]?t[1].substring(4,6):"00"}}const m=(n,i)=>e(void 0,void 0,void 0,(function*(){const e=n.replace("webcal://","https://"),r=UrlFetchApp.fetch(e,{validateHttpsCertificates:!1,muteHttpExceptions:!0}),s=r.getContentText()||"";if(200!==r.getResponseCode())throw new Error(t+e);if(-1===s.search("BEGIN:VCALENDAR"))throw new Error("RESPOSTA INVALIDA PRA UM ICS");const o=s.split("BEGIN:VEVENT\r\n").filter((e=>e.search("SUMMARY")>-1)),a=(s.search("SUMMARY:No task.")>0?[]:o.reduce(((e,t)=>{const n=t.split("BEGIN:VALARM\r\n");return[...e,{CALNAME:f(s,"X-WR-CALNAME:","\r\n"),DSTAMP:f(t,"DTSTAMP:","\r\n"),DTSTART:f(t,"DTSTART;","\r\n"),DTEND:f(t,"DTEND;","\r\n"),SUMMARY:f(t,"SUMMARY:","\r\n"),UID:f(t,"UID:","\r\n"),DESCRIPTION:f(t,"DESCRIPTION:","\r\n"),SEQUENCE:f(t,"SEQUENCE:","\r\n"),TZID:f(t,"TZID:","\r\n"),ALARM_TRIGGER:1===n.length?"":f(n[1],"TRIGGER:","\r\n"),ALARM_ACTION:1===n.length?"":f(n[1],"ACTION:","\r\n"),ALARM_DESCRIPTION:1===n.length?"":f(n[1],"DESCRIPTION:","\r\n")}]}),[])).map((e=>{const t=function(e,t,n,i){let r=e,s=t;if(r=r.slice(r.search(":")+1),s=s.slice(s.search(":")+1),""===s){const e=u(r),t=new Date(Date.UTC(Number(e.year),Number(e.month)-1,Number(e.day),0,0,0));t.setDate(t.getDate()+1),s={date:t.toISOString().split("T")[0]},r={date:`${e.year}-${e.month}-${e.day}`}}else{const e=u(r),t=u(s),o=(e=>0===e?"":`${e<0?"-":"+"}${String(Math.abs(e)).padStart(2,"0")}:00`)(i);r={dateTime:`${e.year}-${e.month}-${e.day}T${e.hours}:${e.minutes}:${e.seconds}${o}`,timeZone:n},s={dateTime:`${t.year}-${t.month}-${t.day}T${t.hours}:${t.minutes}:${t.seconds}${o}`,timeZone:n}}return{finalDtstart:r,finalDtend:s}}(e.DTSTART,e.DTEND,e.TZID,i);return{id:e.UID,name:e.SUMMARY,description:e.DESCRIPTION,tzid:e.TZID,start:t.finalDtstart,end:t.finalDtend}}));return a})),f=(e,t,n)=>{const i=e.slice(e.search(t)).replace(t,"");return i.slice(0,i.search(n))};const p="gcal-sync",h="2.0.0",g="ticktick_sync",y="github_sync";function T(e){return"object"==typeof e&&null!==e}function _(e,t){if(!T(e))return!1;for(const n in t){if(!(n in e))return s.error(`Missing key: ${n}`),!1;const i=typeof t[n],r=typeof e[n];if(T(t[n])){if(!T(e[n])||!_(e[n],t[n]))return s.error(`Invalid nested structure or type mismatch at key: ${n}`),!1}else if(i!==r)return s.error(`Type mismatch at key: ${n}. Expected ${i}, found ${r}`),!1}return!0}function v(e,t){return _(e,t)}const E={settings:{sync_function:"",timezone_correction:-3,update_frequency:4},options:{daily_summary_email_time:"15:00",email_daily_summary:!1,email_errors:!1,email_new_gcal_sync_release:!1,email_session:!1,maintenance_mode:!1,show_logs:!1}},A={ics_calendars:[]},S={username:"",commits_configs:{commits_calendar:"",ignored_repos:[],parse_commit_emojis:!1},issues_configs:{issues_calendar:""},personal_token:""};return class{constructor(e){if(this.configs=e,this.isGASEnvironment="undefined"!=typeof Calendar,!function(e){if(!T(e))return!1;const t={basic:!0,ticktick:!0,github:!0};return t.basic=v(e,E),g in e&&(t.ticktick=v(e[g],A)),y in e&&(t.github=v(e[y],S)),Object.values(t).every((e=>!0===e))}(e))throw new Error("schema invalid");this.today_date=function(e){const t=new Date;return t.setHours(t.getHours()+e),t}(this.configs.settings.timezone_correction).toISOString().split("T")[0],s.info(`${p} is running at version ${h}!`)}sync(){return e(this,void 0,void 0,(function*(){const t=this.configs[y],r=this.configs[g];if(!t&&!r)return void s.info("nothing to sync");const a={githubCommits:[],ticktickTasks:[],ticktickGcalTasks:[],allIcsLinks:[],allGcalTasks:[]},c=[...new Set([].concat(t?[this.configs[y].commits_configs.commits_calendar,this.configs[y].issues_configs.issues_calendar]:[]).concat(r?[...this.configs[g].ics_calendars.map((e=>e.gcal)),...this.configs[g].ics_calendars.map((e=>e.dcal_done))]:[]))];if(o(c),a.allGcalTasks=d(c),r){const t=this.configs[g].ics_calendars;a.allIcsLinks=t.map((e=>e.link)),a.ticktickGcalTasks=d([...new Set(t.map((e=>e.gcal)))]),a.ticktickTasks=(yield Promise.all(a.allIcsLinks.map((t=>e(this,void 0,void 0,(function*(){return yield m(t,this.configs.settings.timezone_correction)})))))).reduce(((e,t)=>e.concat(t)),[])}t&&(a.githubCommits=yield function(t,r){var s;return e(this,void 0,void 0,(function*(){const e=[];let o=1,a=!1;for(;!1===a;){const c=`https://api.github.com/search/commits?q=author:${t}&page=${o}&sort=committer-date&per_page=100`;let l;l=""!==r?UrlFetchApp.fetch(c,{muteHttpExceptions:!0,headers:{Authorization:`Bearer ${r}`}}):UrlFetchApp.fetch(c,{muteHttpExceptions:!0});const d=null!==(s=JSON.parse(l.getContentText()))&&void 0!==s?s:{};if(200!==l.getResponseCode()){if("Validation Failed"===d.message)throw new Error(i);if("Bad credentials"===d.message)throw new Error(n);throw new Error(d.message)}const u=d.items;if(0===u.length){a=!0;break}if(e.push(...u),o++,o>10){a=!0;break}}return e.map((e=>({commitDate:e.commit.author.date,commitMessage:e.commit.message.split("\n")[0],commitId:e.html_url.split("commit/")[1],commitUrl:e.html_url,repository:e.repository.full_name,repositoryId:e.repository.id,repositoryName:e.repository.name,repositoryOwner:e.repository.owner.login,repositoryDescription:e.repository.description,isRepositoryPrivate:e.repository.private,isRepositoryFork:e.repository.fork})))}))}(this.configs[y].username,this.configs[y].personal_token)),console.log(a)}))}}}));
