function install(){deleteAllTriggers(),ScriptApp.newTrigger("startSync").timeBased().everyMinutes(getValidTriggerFrequency(CONFIGS.updateFrequency)).create(),ScriptApp.newTrigger("startSync").timeBased().after(1e3).create(),ScriptApp.newTrigger("checkForUpdate").timeBased().everyDays(1).create()}function uninstall(){deleteAllTriggers()}function deleteAllTriggers(){for(var a=ScriptApp.getProjectTriggers(),e=0;e<a.length;e++)["startSync","install","main","checkForUpdate"].includes(a[e].getHandlerFunction())&&ScriptApp.deleteTrigger(a[e])}function getValidTriggerFrequency(a){if(!a>0)return Logger.log("No valid frequency specified. Defaulting to 15 minutes."),15;var e=5*Math.round(a/5);return e=Math.max(e,1),15==(e=Math.min(e,15))&&Math.abs(a-30)<Math.abs(a-15)&&(e=30),Logger.log("Intended frequency = "+a+", Adjusted frequency = "+e),e}function checkForUpdate(){if(""!=CONFIGS.email){var a,e,r=PropertiesService.getScriptProperties().getProperty("alertedForNewVersion");try{var i=(a=UrlFetchApp.fetch("https://api.github.com/repos/derekantrican/GAS-ICS-Sync/releases?per_page=1"),e=JSON.parse(a)[0].tag_name,Number(e));i>5.7&&i!=r&&(MailApp.sendEmail(CONFIGS.email,`Version ${i} of GAS-ICS-Sync is available! (You have 5.7)`,"You can see the latest release here: https://github.com/derekantrican/GAS-ICS-Sync/releases"),PropertiesService.getScriptProperties().setProperty("alertedForNewVersion",i))}catch(a){console.log(a.message)}}}function startSync(){if(PropertiesService.getUserProperties().getProperty("LastRun")>0&&(new Date).getTime()-PropertiesService.getUserProperties().getProperty("LastRun")<36e4)return void Logger.log("Another iteration is currently running! Exiting...");PropertiesService.getUserProperties().setProperty("LastRun",(new Date).getTime()),CONFIGS.getOnlyFutureEvents&&(CONFIGS.startUpdateTime=new ICAL.Time.fromJSDate(new Date));const a=condenseCalendarMap(CONFIGS.ticktickCallendars);for(var e of a){CALENDAR.calendarEvents=[],CALENDAR.calendarEventsIds=[],CALENDAR.icsEventsIds=[],CALENDAR.calendarEventsMD5s=[],CALENDAR.recurringEvents=[],CALENDAR.targetCalendarName=e[0],CALENDAR.targetCalendarName="";var r,i=fetchSourceCalendars(e[1]);Logger.log("Syncing "+i.length+" calendars to "+CALENDAR.targetCalendarName);var t=setupTargetCalendar(CALENDAR.targetCalendarName);if(CALENDAR.targetCalendarId=t.id,Logger.log("Working on calendar: "+CALENDAR.targetCalendarId),CONFIGS.addEventsToCalendar||CONFIGS.modifyExistingEvents||CONFIGS.removeEventsFromCalendar){var n=callWithBackoff((function(){return Calendar.Events.list(CALENDAR.targetCalendarId,{showDeleted:!1,privateExtendedProperty:"fromGAS=true",maxResults:2500})}),CONFIGS.defaultMaxRetries);for(CALENDAR.calendarEvents=[].concat(CALENDAR.calendarEvents,n.items);void 0!==n.nextPageToken;)null!=(n=callWithBackoff((function(){return Calendar.Events.list(CALENDAR.targetCalendarId,{showDeleted:!1,privateExtendedProperty:"fromGAS=true",maxResults:2500,pageToken:n.nextPageToken})}),CONFIGS.defaultMaxRetries))&&(CALENDAR.calendarEvents=[].concat(CALENDAR.calendarEvents,n.items));Logger.log("Fetched "+CALENDAR.calendarEvents.length+" existing events from "+CALENDAR.targetCalendarName);for(var s=0;s<CALENDAR.calendarEvents.length;s++)null!=CALENDAR.calendarEvents[s].extendedProperties&&(CALENDAR.calendarEventsIds[s]=CALENDAR.calendarEvents[s].extendedProperties.private["rec-id"]||CALENDAR.calendarEvents[s].extendedProperties.private.id,CALENDAR.calendarEventsMD5s[s]=CALENDAR.calendarEvents[s].extendedProperties.private.MD5);r=parseResponses(i,CALENDAR.icsEventsIds),Logger.log("Parsed "+r.length+" events from ical sources")}if(CONFIGS.addEventsToCalendar||CONFIGS.modifyExistingEvents){Logger.log("Processing "+r.length+" events");var o=callWithBackoff((function(){return Calendar.Settings.get("timezone").value}),CONFIGS.defaultMaxRetries);r.forEach((function(a){processEvent(a,o)})),Logger.log("Done processing events")}for(var c of(CONFIGS.removeEventsFromCalendar&&(Logger.log("Checking "+CALENDAR.calendarEvents.length+" events for removal"),processEventCleanup(),Logger.log("Done checking events for removal")),CONFIGS.addTasks&&processTasks(i),Logger.log("Processing "+CALENDAR.recurringEvents.length+" Recurrence Instances!"),CALENDAR.recurringEvents))processEventInstance(c)}SESSION.addedEvents.length+SESSION.modifiedEvents.length+SESSION.removedEvents.length>0&&CONFIGS.emailSummary&&sendSummary(),Logger.log("Sync finished!"),PropertiesService.getUserProperties().setProperty("LastRun",0)}function condenseCalendarMap(a){var e=[];for(var r of a){for(var i=-1,t=0;t<e.length;t++)if(e[t][0]==r[1]){i=t;break}i>-1?e[i][1].push([r[0],r[2]]):e.push([r[1],[[r[0],r[2]]]])}return e}function fetchSourceCalendars(a){var e=[];for(var r of a){var i=r[0].replace("webcal://","https://"),t=r[1];callWithBackoff((function(){var a=UrlFetchApp.fetch(i,{validateHttpsCertificates:!1,muteHttpExceptions:!0});if(200==a.getResponseCode()){var r=RegExp("(BEGIN:VCALENDAR.*?END:VCALENDAR)","s").exec(a.getContentText());return null==r?void Logger.log("[ERROR] Incorrect ics/ical URL: "+i):void e.push([r[0],t])}throw"Error: Encountered HTTP error "+a.getResponseCode()+" when accessing "+i}),CONFIGS.defaultMaxRetries)}return e}function setupTargetCalendar(a){var e=Calendar.CalendarList.list({showHidden:!0,maxResults:250}).items.filter((function(e){return(e.summaryOverride||e.summary)==a&&("owner"==e.accessRole||"writer"==e.accessRole)}))[0];return null==e&&(Logger.log("Creating Calendar: "+a),(e=Calendar.newCalendar()).summary=a,e.description="Created by GAS",e.timeZone=Calendar.Settings.get("timezone").value,e=Calendar.Calendars.insert(e)),e}function parseResponses(a){var e=[];for(var r of a){var i=r[0],t=r[1],n=ICAL.parse(i),s=new ICAL.Component(n);ICAL.helpers.updateTimezones(s);var o=s.getAllSubcomponents("vtimezone");for(var c of o)ICAL.TimezoneService.register(c);var d=s.getAllSubcomponents("vevent");null!=t&&d.forEach((function(a){a.addPropertyWithValue("color",t)}));var l=s.getFirstPropertyValue("x-wr-calname")||s.getFirstPropertyValue("name");null!=l&&d.forEach((function(a){a.addPropertyWithValue("parentCal",l)})),e=[].concat(d,e)}return CONFIGS.getOnlyFutureEvents&&(e=e.filter((function(a){try{return!!(a.hasProperty("recurrence-id")||a.hasProperty("rrule")||a.hasProperty("rdate")||a.hasProperty("exdate"))||new ICAL.Time.fromString(a.getFirstPropertyValue("dtend").toString(),a.getFirstProperty("dtend")).compare(CONFIGS.startUpdateTime)>=0}catch(a){return!0}}))),(e=e.filter((function(a){try{return"cancelled"!=a.getFirstPropertyValue("status").toString().toLowerCase()}catch(a){return!0}}))).forEach((function(a){if(a.hasProperty("uid")||a.updatePropertyWithValue("uid",Utilities.computeDigest(Utilities.DigestAlgorithm.MD5,a.toString()).toString()),a.hasProperty("recurrence-id")){var e=new ICAL.Time.fromString(a.getFirstPropertyValue("recurrence-id").toString(),a.getFirstProperty("recurrence-id")).convertToZone(ICAL.TimezoneService.get("UTC")).toString();CALENDAR.icsEventsIds.push(a.getFirstPropertyValue("uid").toString()+"_"+e)}else CALENDAR.icsEventsIds.push(a.getFirstPropertyValue("uid").toString())})),e}function processEvent(a,e){console.log(a);var r=createEvent(a,e);if(null!=r){var i=CALENDAR.calendarEventsIds.indexOf(r.extendedProperties.private.id),t=i>-1;if(a.hasProperty("recurrence-id"))return Logger.log("Saving event instance for later: "+r.recurringEventId),void CALENDAR.recurringEvents.push(r);t?CONFIGS.modifyExistingEvents&&(Logger.log("Updating existing event "+r.extendedProperties.private.id),null!=(r=callWithBackoff((function(){return Calendar.Events.update(r,CALENDAR.targetCalendarId,CALENDAR.calendarEvents[i].id)}),CONFIGS.defaultMaxRetries))&&CONFIGS.emailSummary&&SESSION.modifiedEvents.push([[r.summary,r.start.date||r.start.dateTime],CALENDAR.targetCalendarName])):CONFIGS.addEventsToCalendar&&(Logger.log("Adding new event "+r.extendedProperties.private.id),null!=(r=callWithBackoff((function(){return Calendar.Events.insert(r,CALENDAR.targetCalendarId)}),CONFIGS.defaultMaxRetries))&&CONFIGS.emailSummary&&SESSION.addedEvents.push([[r.summary,r.start.date||r.start.dateTime],CALENDAR.targetCalendarName]))}}function createEvent(a,e){a.removeProperty("dtstamp");var r=new ICAL.Event(a,{strictExceptions:!0});if(!CONFIGS.getOnlyFutureEvents||!checkSkipEvent(a,r)){var i=Utilities.computeDigest(Utilities.DigestAlgorithm.MD5,r.toString()).toString();if(!(CALENDAR.calendarEventsMD5s.indexOf(i)>=0)){var t=callWithBackoff((function(){return Calendar.newEvent()}),CONFIGS.defaultMaxRetries);if(r.startDate.isDate)0==r.startDate.compare(r.endDate)&&(r.endDate=r.endDate.adjust(1,0,0,0)),t={start:{date:r.startDate.toString()},end:{date:r.endDate.toString()}};else{var n=r.startDate.timezone;if(-1==TZIDS.indexOf(n)){var s=n;n=n in TZID_REPLACE?TZID_REPLACE[n]:e,Logger.log("Converting ICS timezone "+s+" to Google Calendar (IANA) timezone "+n)}t={start:{dateTime:r.startDate.toString(),timeZone:n},end:{dateTime:r.endDate.toString(),timeZone:n}}}if(CONFIGS.addAttendees&&a.hasProperty("attendee"))for(var o of(t.attendees=[],r.attendees)){var c=parseAttendeeMail(o.toICALString());if(null!=c){var d={email:c},l=parseAttendeeName(o.toICALString());null!=l&&(d.displayName=l);var u=parseAttendeeResp(o.toICALString());null!=u&&(d.responseStatus=u),t.attendees.push(d)}}if(a.hasProperty("status")){var A=a.getFirstPropertyValue("status").toString().toLowerCase();["confirmed","tentative","cancelled"].indexOf(A)>-1&&(t.status=A)}if(a.hasProperty("url")&&"http"==a.getFirstPropertyValue("url").toString().substring(0,4)&&(t.source=callWithBackoff((function(){return Calendar.newEventSource()}),CONFIGS.defaultMaxRetries),t.source.url=a.getFirstPropertyValue("url").toString(),t.source.title="link"),a.hasProperty("sequence"),CONFIGS.descriptionAsTitles&&a.hasProperty("description")?t.summary=r.description:a.hasProperty("summary")&&(t.summary=r.summary),CONFIGS.addOrganizerToTitle&&a.hasProperty("organizer")){var m=a.getFirstProperty("organizer").getParameter("cn").toString();null!=m&&(t.summary=m+": "+t.summary)}if(CONFIGS.addCalToTitle&&a.hasProperty("parentCal")){var g=a.getFirstPropertyValue("parentCal");t.summary="("+g+") "+t.summary}a.hasProperty("description")&&(t.description=r.description),a.hasProperty("location")&&(t.location=r.location);var p=["default","public","private","confidential"];if(p.includes(CONFIGS.overrideVisibility.toLowerCase()))t.visibility=CONFIGS.overrideVisibility.toLowerCase();else if(a.hasProperty("class")){var S=a.getFirstPropertyValue("class").toString().toLowerCase();p.includes(S)&&(t.visibility=S)}if(a.hasProperty("transp")){var f=a.getFirstPropertyValue("transp").toString().toLowerCase();["opaque","transparent"].indexOf(f)>-1&&(t.transparency=f)}switch(r.startDate.isDate?0<=CONFIGS.defaultAllDayReminder&&CONFIGS.defaultAllDayReminder<=40320?t.reminders={useDefault:!1,overrides:[{method:"popup",minutes:CONFIGS.defaultAllDayReminder}]}:t.reminders={useDefault:!1,overrides:[]}:t.reminders={useDefault:!0,overrides:[]},CONFIGS.addAlerts){case"yes":var E=a.getAllSubcomponents("valarm");if(E.length>0){var T=[];for(var C of E){var v=C.getFirstPropertyValue("trigger").toString();try{v=new ICAL.Time.fromString(v).subtractDateTz(r.startDate).toString()}catch(a){console.log(a.message)}if(T.length<5){var h=parseNotificationTime(v);0<=h&&h<=40320&&T.push({method:"popup",minutes:h})}}T.length>0&&(t.reminders={useDefault:!1,overrides:T})}break;case"no":t.reminders={useDefault:!1,overrides:[]};break;default:t.reminders={useDefault:!0,overrides:[]}}if(r.isRecurring()){var y,P=new Date,I=new Date(Utilities.formatDate(P,"Etc/GMT","HH:mm:ss MM/dd/yyyy"));y=new Date(Utilities.formatDate(P,e,"HH:mm:ss MM/dd/yyyy"))-I,t.recurrence=parseRecurrenceRule(a,y)}if(t.extendedProperties={private:{MD5:i,fromGAS:"true",id:r.uid}},a.hasProperty("recurrence-id")){var k=new ICAL.Time.fromString(a.getFirstPropertyValue("recurrence-id").toString(),a.getFirstProperty("recurrence-id"));t.recurringEventId=k.convertToZone(ICAL.TimezoneService.get("UTC")).toString(),t.extendedProperties.private["rec-id"]=t.extendedProperties.private.id+"_"+t.recurringEventId}return a.hasProperty("color")&&(t.colorId=a.getFirstPropertyValue("color").toString()),t}Logger.log("Skipping unchanged Event "+a.getFirstPropertyValue("uid").toString())}}function checkSkipEvent(a,e){if(e.isRecurrenceException()){if(e.startDate.compare(CONFIGS.startUpdateTime)<0&&e.recurrenceId.compare(CONFIGS.startUpdateTime)<0)return Logger.log("Skipping past recurrence exception"),!0}else if(e.isRecurring()){var r=!1;if(e.endDate.compare(CONFIGS.startUpdateTime)<0){for(var i,t,n=a.getFirstPropertyValue("dtstart"),s=new ICAL.RecurExpansion({component:a,dtstart:n}),o=0;i=s.next();){const a=i.subtractDate(e.startDate);var c=e.endDate.clone();if(c.addDuration(a),!(c.compare(CONFIGS.startUpdateTime)<0)){t=i;break}o++}if(null!=t){t.timezone=e.startDate.timezone;const r=t.subtractDate(e.startDate);e.endDate.addDuration(r);var d=e.endDate;e.endDate=d,e.startDate=t;var l=a.getFirstProperty("rrule"),u=l.getFirstValue();u.isByCount()&&(u.count-=o,l.setValue(u)),a.getAllProperties("exdate").forEach((function(e){new ICAL.Time.fromString(e.getFirstValue().toString())<t&&a.removeProperty(e)})),a.getAllProperties("rdate").forEach((function(r){var i=r.getValues();0==(i=i.filter((function(a){var i=new ICAL.Time.fromString(a.toString(),r);return i.compare(CONFIGS.startUpdateTime)>=0&&i.compare(e.startDate)>0}))).length?a.removeProperty(r):1==i.length?r.setValue(i[0]):i.length>1&&r.setValues(i)})),Logger.log("Adjusted RRule/RDate to exclude past instances")}else r=!0}for(let a=0;a<e.except.length;a++)e.except[a].startDate.compare(CONFIGS.startUpdateTime)<0&&e.except[a].recurrenceId.compare(CONFIGS.startUpdateTime)>=0?(Logger.log("Creating EXDATE for exception at "+e.except[a].recurrenceId.toString()),e.component.addPropertyWithValue("exdate",e.except[a].recurrenceId.toString())):e.except[a].startDate.compare(CONFIGS.startUpdateTime)>=0&&e.except[a].recurrenceId.compare(CONFIGS.startUpdateTime)<0&&(Logger.log("Creating RDATE for exception at "+e.except[a].recurrenceId.toString()),e.component.addPropertyWithValue("rdate",e.except[a].recurrenceId.toString()),r=!1);if(r)return CALENDAR.icsEventsIds.splice(CALENDAR.icsEventsIds.indexOf(a.getFirstPropertyValue("uid").toString()),1),Logger.log("Skipping past recurring event "+a.getFirstPropertyValue("uid").toString()),!0}else if(e.endDate.compare(CONFIGS.startUpdateTime)<0)return CALENDAR.icsEventsIds.splice(CALENDAR.icsEventsIds.indexOf(a.getFirstPropertyValue("uid").toString()),1),Logger.log("Skipping previous event "+a.getFirstPropertyValue("uid").toString()),!0;return!1}function processEventInstance(a){Logger.log("ID: "+a.extendedProperties.private.id+" | Date: "+a.recurringEventId);var e=callWithBackoff((function(){return Calendar.Events.list(CALENDAR.targetCalendarId,{singleEvents:!0,privateExtendedProperty:"rec-id="+a.extendedProperties.private.id+"_"+a.recurringEventId}).items}),CONFIGS.defaultMaxRetries);null!=e&&0!=e.length||(10==a.recurringEventId.length?a.recurringEventId+="T00:00:00Z":"Z"!==a.recurringEventId.substr(-1)&&(a.recurringEventId+="Z"),e=callWithBackoff((function(){return Calendar.Events.list(CALENDAR.targetCalendarId,{singleEvents:!0,orderBy:"startTime",maxResults:1,timeMin:a.recurringEventId,privateExtendedProperty:"id="+a.extendedProperties.private.id}).items}),CONFIGS.defaultMaxRetries)),null!==e&&1==e.length?(Logger.log("Updating existing event instance"),callWithBackoff((function(){Calendar.Events.update(a,CALENDAR.targetCalendarId,e[0].id)}),CONFIGS.defaultMaxRetries)):(Logger.log("No Instance matched, adding as new event!"),callWithBackoff((function(){Calendar.Events.insert(a,CALENDAR.targetCalendarId)}),CONFIGS.defaultMaxRetries))}function processEventCleanup(){for(var a=0;a<CALENDAR.calendarEvents.length;a++){var e=CALENDAR.calendarEventsIds[a];-1==CALENDAR.icsEventsIds.indexOf(e)&&null==CALENDAR.calendarEvents[a].recurringEventId&&(Logger.log("Deleting old event "+e),callWithBackoff((function(){Calendar.Events.remove(CALENDAR.targetCalendarId,CALENDAR.calendarEvents[a].id)}),CONFIGS.defaultMaxRetries),CONFIGS.emailSummary&&SESSION.removedEvents.push([[CALENDAR.calendarEvents[a].summary,CALENDAR.calendarEvents[a].start.date||CALENDAR.calendarEvents[a].start.dateTime],CALENDAR.targetCalendarName]))}}function processTasks(a){var e=Tasks.Tasklists.list().items[0],r=Tasks.Tasks.list(e.id).items||[],i=[];Logger.log("Fetched "+r.length+" existing tasks from "+e.title);for(var t=0;t<r.length;t++)i[t]=r[t].id;console.log("existingTasksIds"),console.log(i);var n=[],s=[];for(var o of a){var c=ICAL.parse(o),d=new ICAL.Component(c);s=[].concat(d.getAllSubcomponents("vtodo"),s)}for(var l of(console.log("vtasks"),console.log(s),s.forEach((function(a){n.push(a.getFirstPropertyValue("uid").toString())})),Logger.log("\tProcessing "+s.length+" tasks"),s)){var u=Tasks.newTask();u.id=l.getFirstPropertyValue("uid").toString(),u.title=l.getFirstPropertyValue("summary").toString();var A=l.getFirstPropertyValue("due").toJSDate();u.due=A.getFullYear()+"-"+("0"+(A.getMonth()+1)).slice(-2)+"-"+("0"+A.getDate()).slice(-2)+"T"+("0"+A.getHours()).slice(-2)+":"+("0"+A.getMinutes()).slice(-2)+":"+("0"+A.getSeconds()).slice(-2)+"Z",Tasks.Tasks.insert(u,e.id)}if(Logger.log("\tDone processing tasks"),CONFIGS.removeEventsFromCalendar){Logger.log("Checking "+i.length+" tasks for removal");for(let a=0;a<i.length;a++){var m=r[a].id;-1==n.indexOf(m)&&(Logger.log("Deleting old task "+m),Tasks.Tasks.remove(e.id,m))}Logger.log("Done removing tasks")}}function parseRecurrenceRule(a,e){var r=a.getAllProperties("rrule"),i=a.getAllProperties("exrule"),t=a.getAllProperties("exdate"),n=a.getAllProperties("rdate"),s=[];for(var o of r){var c,d=o.toICALString(),l=RegExp("(.*)(UNTIL=)(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)T(\\d\\d)(\\d\\d)(\\d\\d)(;.*|\\b)","g").exec(d);null!=l&&(c=new Date(Date.UTC(parseInt(l[3],10),parseInt(l[4],10)-1,parseInt(l[5],10),parseInt(l[6],10),parseInt(l[7],10),parseInt(l[8],10))),c=Utilities.formatDate(new Date(c-e),"etc/GMT","YYYYMMdd'T'HHmmss'Z'"),d=l[1]+l[2]+c+l[9]),s.push(d)}for(var u of i)s.push(u.toICALString());for(var A of t)s.push(A.toICALString());for(var m of n)s.push(m.toICALString());return s}function parseAttendeeName(a){var e=RegExp("(cn=)([^;$:]*)","gi").exec(a);return null!=e&&e.length>1?e[2]:null}function parseAttendeeMail(a){var e=RegExp("(:mailto:)([^;$:]*)","gi").exec(a);return null!=e&&e.length>1?e[2]:null}function parseAttendeeResp(a){var e=RegExp("(partstat=)([^;$:]*)","gi").exec(a);return null!=e&&e.length>1?(["NEEDS-ACTION"].indexOf(e[2].toUpperCase())>-1?e[2]="needsAction":["ACCEPTED","COMPLETED"].indexOf(e[2].toUpperCase())>-1?e[2]="accepted":["DECLINED"].indexOf(e[2].toUpperCase())>-1?e[2]="declined":["DELEGATED","IN-PROCESS","TENTATIVE"].indexOf(e[2].toUpperCase())?e[2]="tentative":e[2]=null,e[2]):null}function parseNotificationTime(a){var e=0;"+"!=a[0]&&"-"!=a[0]||(a=a.substr(1)),a=a.substr(1);var r=RegExp("\\d+M","g").exec(a),i=RegExp("\\d+H","g").exec(a),t=RegExp("\\d+D","g").exec(a),n=RegExp("\\d+W","g").exec(a);return null!=n?e+=10080&parseInt(n[0].slice(0,-1)):(null!=r&&(e+=parseInt(r[0].slice(0,-1))),null!=i&&(e+=60*parseInt(i[0].slice(0,-1))),null!=t&&(e+=24*parseInt(t[0].slice(0,-1))*60),e)}function sendSummary(){let a="",e="";for(var r of(a=`GAS-ICS-Sync Execution Summary: ${SESSION.addedEvents.length} new, ${SESSION.modifiedEvents.length} modified, ${SESSION.removedEvents.length} deleted`,SESSION.addedEvents=condenseCalendarMap(SESSION.addedEvents),SESSION.modifiedEvents=condenseCalendarMap(SESSION.modifiedEvents),SESSION.removedEvents=condenseCalendarMap(SESSION.removedEvents),e="GAS-ICS-Sync made the following changes to your calendar:<br/>",SESSION.addedEvents)){for(var i of(e+=`<br/>${r[0]}: ${r[1].length} added events<br/><ul>`,r[1]))e+="<li>"+i[0]+" at "+i[1]+"</li>";e+="</ul>"}for(const a of SESSION.modifiedEvents){e+=`<br/>${a[0]}: ${a[1].length} modified events<br/><ul>`;for(const r of a[1])e+="<li>"+r[0]+" at "+r[1]+"</li>";e+="</ul>"}for(const a of SESSION.removedEvents){e+=`<br/>${a[0]}: ${a[1].length} removed events<br/><ul>`;for(const r of a[1])e+="<li>"+r[0]+" at "+r[1]+"</li>";e+="</ul>"}e+="<br/><br/>Do you have any problems or suggestions? Contact us at <a href='https://github.com/derekantrican/GAS-ICS-Sync/'>github</a>.";var t={to:CONFIGS.email,subject:a,htmlBody:e,name:"GAS-ICS-Sync"};MailApp.sendEmail(t)}function callWithBackoff(a,e){const r=["service invoked too many times in a short time","rate limit exceeded","internal error"];for(var i=0;i<=e;){i++;try{return a()}catch(a){const t=a.message;if(t.indexOf("HTTP error")>-1)return Logger.log(t),null;if(t.indexOf("is not a function")>-1||!r.some((function(e){return a.toLowerCase().indexOf(e)>-1})))throw a;if(i>e)return Logger.log(`Error, giving up after trying ${e} times [${a}]`),null;Logger.log("Error, Retrying... ["+a+"]"),Utilities.sleep(100*Math.pow(2,i)),Math.round(100*Math.random())}}return null}this.TickSync={},this.CONFIGS={email:"lucasvtiradentes@gmail.com",ticktickCallendars:[["webcal://ticktick.com/pub/calendar/feeds/vvl0cw34vamw/basic.ics","ticktick"]],updateFrequency:15,getOnlyFutureEvents:!1,startUpdateTime:"",addEventsToCalendar:!0,modifyExistingEvents:!0,removeEventsFromCalendar:!0,addAlerts:"yes",addOrganizerToTitle:!1,descriptionAsTitles:!1,addCalToTitle:!1,addAttendees:!1,defaultAllDayReminder:-1,overrideVisibility:"",addTasks:!1,emailSummary:!1,defaultMaxRetries:10},this.CALENDAR={calendarEvents:[],calendarEventsIds:[],icsEventsIds:[],calendarEventsMD5s:[],recurringEvents:[],targetCalendarId:"",targetCalendarName:""},this.SESSION={addedEvents:[],modifiedEvents:[],removedEvents:[]},this.TZIDS=["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port_of_Spain","America/Port-au-Prince","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/North","Australia/NSW","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","CET","Chile/Continental","Chile/EasterIsland","CST6CDT","Cuba","EET","Egypt","Eire","EST","EST5EDT","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT0","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/Greenwich","Etc/UCT","Etc/Universal","Etc/UTC","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Asia/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","GB","GB-Eire","GMT","GMT+0","GMT0","GMT−0","Hongkong","HST","Iceland","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Iran","Israel","Jamaica","Japan","Kwajalein","Libya","MET","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","MST","MST7MDT","Navajo","NZ","NZ-CHAT","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap","Poland","Portugal","PRC","PST8PDT","ROC","ROK","Singapore","Turkey","UCT","Universal","US/Alaska","US/Aleutian","US/Arizona","US/Central","US/Eastern","US/East-Indiana","US/Hawaii","US/Indiana-Starke","US/Michigan","US/Mountain","US/Pacific","US/Pacific-New","US/Samoa","UTC","WET","W-SU","Zulu"],this.TZID_REPLACE={"Dateline Standard Time":"Etc/GMT+12","UTC-11":"Etc/GMT+11","Aleutian Standard Time":"America/Adak","Hawaiian Standard Time":"Pacific/Honolulu","Marquesas Standard Time":"Pacific/Marquesas","Alaskan Standard Time":"America/Anchorage","UTC-09":"Pacific/Gambier","Pacific Standard Time (Mexico)":"America/Tijuana","UTC-08":"Pacific/Pitcairn","Pacific Standard Time":"America/Los_Angeles","US Mountain Standard Time":"America/Phoenix","Mountain Standard Time (Mexico)":"America/Chihuahua","Mountain Standard Time":"America/Denver","Central America Standard Time":"America/Guatemala","Central Standard Time":"America/Chicago","Easter Island Standard Time":"Pacific/Easter","Central Standard Time (Mexico)":"America/Mexico_City","Canada Central Standard Time":"America/Regina","SA Pacific Standard Time":"America/Bogota","Eastern Standard Time (Mexico)":"America/Cancun","Eastern Standard Time":"America/New_York","Haiti Standard Time":"America/Port-au-Prince","Cuba Standard Time":"America/Havana","US Eastern Standard Time":"America/Indianapolis","Paraguay Standard Time":"America/Asuncion","Atlantic Standard Time":"America/Halifax","Venezuela Standard Time":"America/Caracas","Central Brazilian Standard Time":"America/Cuiaba","SA Western Standard Time":"America/La_Paz","Pacific SA Standard Time":"America/Santiago","Turks And Caicos Standard Time":"America/Grand_Turk","Newfoundland Standard Time":"America/St_Johns","Tocantins Standard Time":"America/Araguaina","E. South America Standard Time":"America/Sao_Paulo","SA Eastern Standard Time":"America/Cayenne","Argentina Standard Time":"America/Buenos_Aires","Greenland Standard Time":"America/Godthab","Montevideo Standard Time":"America/Montevideo","Magallanes Standard Time":"America/Punta_Arenas","Saint Pierre Standard Time":"America/Miquelon","Bahia Standard Time":"America/Bahia","UTC-02":"America/Noronha","Azores Standard Time":"Atlantic/Azores","Cape Verde Standard Time":"Atlantic/Cape_Verde",UTC:"Etc/GMT","GMT Standard Time":"Europe/London","Greenwich Standard Time":"Atlantic/Reykjavik","W. Europe Standard Time":"Europe/Berlin","Central Europe Standard Time":"Europe/Budapest","Romance Standard Time":"Europe/Paris","Morocco Standard Time":"Africa/Casablanca","Sao Tome Standard Time":"Africa/Sao_Tome","Central European Standard Time":"Europe/Warsaw","W. Central Africa Standard Time":"Africa/Lagos","Jordan Standard Time":"Asia/Amman","GTB Standard Time":"Europe/Bucharest","Middle East Standard Time":"Asia/Beirut","Egypt Standard Time":"Africa/Cairo","E. Europe Standard Time":"Europe/Chisinau","Syria Standard Time":"Asia/Damascus","West Bank Standard Time":"Asia/Hebron","South Africa Standard Time":"Africa/Johannesburg","FLE Standard Time":"Europe/Kiev","Israel Standard Time":"Asia/Jerusalem","Kaliningrad Standard Time":"Europe/Kaliningrad","Sudan Standard Time":"Africa/Khartoum","Libya Standard Time":"Africa/Tripoli","Namibia Standard Time":"Africa/Windhoek","Arabic Standard Time":"Asia/Baghdad","Turkey Standard Time":"Europe/Istanbul","Arab Standard Time":"Asia/Riyadh","Belarus Standard Time":"Europe/Minsk","Russian Standard Time":"Europe/Moscow","E. Africa Standard Time":"Africa/Nairobi","Iran Standard Time":"Asia/Tehran","Arabian Standard Time":"Asia/Dubai","Astrakhan Standard Time":"Europe/Astrakhan","Azerbaijan Standard Time":"Asia/Baku","Russia Time Zone 3":"Europe/Samara","Mauritius Standard Time":"Indian/Mauritius","Saratov Standard Time":"Europe/Saratov","Georgian Standard Time":"Asia/Tbilisi","Caucasus Standard Time":"Asia/Yerevan","Afghanistan Standard Time":"Asia/Kabul","West Asia Standard Time":"Asia/Tashkent","Ekaterinburg Standard Time":"Asia/Yekaterinburg","Pakistan Standard Time":"Asia/Karachi","India Standard Time":"Asia/Calcutta","Sri Lanka Standard Time":"Asia/Colombo","Nepal Standard Time":"Asia/Katmandu","Central Asia Standard Time":"Asia/Almaty","Bangladesh Standard Time":"Asia/Dhaka","Omsk Standard Time":"Asia/Omsk","Myanmar Standard Time":"Asia/Rangoon","SE Asia Standard Time":"Asia/Bangkok","Altai Standard Time":"Asia/Barnaul","W. Mongolia Standard Time":"Asia/Hovd","North Asia Standard Time":"Asia/Krasnoyarsk","N. Central Asia Standard Time":"Asia/Novosibirsk","Tomsk Standard Time":"Asia/Tomsk","China Standard Time":"Asia/Shanghai","North Asia East Standard Time":"Asia/Irkutsk","Singapore Standard Time":"Asia/Singapore","W. Australia Standard Time":"Australia/Perth","Taipei Standard Time":"Asia/Taipei","Ulaanbaatar Standard Time":"Asia/Ulaanbaatar","Aus Central W. Standard Time":"Australia/Eucla","Transbaikal Standard Time":"Asia/Chita","Tokyo Standard Time":"Asia/Tokyo","North Korea Standard Time":"Asia/Pyongyang","Korea Standard Time":"Asia/Seoul","Yakutsk Standard Time":"Asia/Yakutsk","Cen. Australia Standard Time":"Australia/Adelaide","AUS Central Standard Time":"Australia/Darwin","E. Australia Standard Time":"Australia/Brisbane","AUS Eastern Standard Time":"Australia/Sydney","West Pacific Standard Time":"Pacific/Port_Moresby","Tasmania Standard Time":"Australia/Hobart","Vladivostok Standard Time":"Asia/Vladivostok","Lord Howe Standard Time":"Australia/Lord_Howe","Bougainville Standard Time":"Pacific/Bougainville","Russia Time Zone 10":"Asia/Srednekolymsk","Magadan Standard Time":"Asia/Magadan","Norfolk Standard Time":"Pacific/Norfolk","Sakhalin Standard Time":"Asia/Sakhalin","Central Pacific Standard Time":"Pacific/Guadalcanal","Russia Time Zone 11":"Asia/Kamchatka","New Zealand Standard Time":"Pacific/Auckland","UTC+12":"Pacific/Wallis","Fiji Standard Time":"Pacific/Fiji","Chatham Islands Standard Time":"Pacific/Chatham","UTC+13":"Pacific/Enderbury","Tonga Standard Time":"Pacific/Tongatapu","Samoa Standard Time":"Pacific/Apia","Line Islands Standard Time":"Pacific/Kiritimati",Z:"Etc/GMT"},TickSync.install=install,TickSync.uninstall=uninstall,TickSync.deleteAllTriggers=deleteAllTriggers,TickSync.getValidTriggerFrequency=getValidTriggerFrequency,TickSync.checkForUpdate=checkForUpdate,TickSync.startSync=startSync,TickSync.condenseCalendarMap=condenseCalendarMap,TickSync.fetchSourceCalendars=fetchSourceCalendars,TickSync.setupTargetCalendar=setupTargetCalendar,TickSync.parseResponses=parseResponses,TickSync.processEvent=processEvent,TickSync.createEvent=createEvent,TickSync.checkSkipEvent=checkSkipEvent,TickSync.processEventInstance=processEventInstance,TickSync.processEventCleanup=processEventCleanup,TickSync.processTasks=processTasks,TickSync.parseRecurrenceRule=parseRecurrenceRule,TickSync.parseAttendeeName=parseAttendeeName,TickSync.parseAttendeeMail=parseAttendeeMail,TickSync.parseAttendeeResp=parseAttendeeResp,TickSync.parseNotificationTime=parseNotificationTime,TickSync.sendSummary=sendSummary,TickSync.callWithBackoff=callWithBackoff;